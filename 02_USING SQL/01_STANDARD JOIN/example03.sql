--- 06. ON 조건절
-- 칼럼명이 다르더라도 JOIN 조건을 사용할 수 있는 장점이 존재
-- USIGN과 다르게 ALIAS나 접두사를 사용하여 칼럼을 논리적으로 명확하게 지정해야 한다.

-- (가) WHERE 절과의 혼용
-- 검색 목적인 경우 ON 절보다는 WHERE 절에 사용해야 한다.
SELECT E.ENAME, E.DEPTNO, D.DEPTNO, D.DNAME
FROM EMP E JOIN DEPT D
ON (E.DEPTNO = D.DEPTNO)
WHERE D.DEPTNO = 30

-- (다) ON 조건절 예제
-- 팀과 스타디움 테이블을 스타디움ID로 JOIN하여 팀 이름, 스타디움 ID, 스타디움 이름을 찾아본다.
SELECT TEAM_NAME, TEAM.STADIUM_ID, STADIUM_NAME
FROM TEAM JOIN STADIUM
ON TEAM.STADIUM_ID = STADIUM.STADIUM_ID
ORDER BY STADIUM_ID;

-- STADIUM_ID라는 공통 칼럼이 있기 때문에 USING 조건절로 구현 가능
SELECT TEAM_NAME, STADIUM_ID, STADIUM_NAME
FROM TEAM JOIN STADIUM
USING (STADIUM_ID)
ORDER BY STADIUM_ID;

-- WHERE 절의 INNER JOIN으로 구현 가능
SELECT TEAM_NAME, TEAM.STADIUM_ID, STADIUM_NAME
FROM TEAM, STADIUM
WHERE TEAM.STADIUM_ID = STADIUM.STADIUM_ID
ORDER BY STADIUM_ID;

-- (라) 다중 테이블 조인
-- 사원과 DEPT 테이블의 소속 부서명, DEPT_TEMP 테이블의 바뀐 부서명 정보를 출력한다.
SELECT E.EMPNO, D.DEPTNO, D.DNAME, T.DNAME New_DNAME
FROM EMP E JOIN DEPT DEPT
ON (E.DEPTNO = D.DEPTNO)
    JOIN DEPT_TEMP T
ON (E.DEPTNO = T.DEPTNO);

-- WHERE 절의 INNER JOIN으로 구현
SELECT E.EMPNO, D.DEPTNO, D.DNAME, T.DANME New_DNAME
FROM EMP E, DEPT D, DEPT_TEMP T
WHERE E.DEPTNO = D.DEPTNO AND E.DEPTNO = T.DEPTNO;

-- 홈팀이 3점 이상 차이로 승리한 경기의 경기장 이름, 경기 일정, 홈팀 이름과 원정팀 이름 정보를 출력한다.
SELECT ST.STADIUM_NAME, SC.STADIUM_ID, SCHE_DATE, HT.TEAM_NAME,
    AWT.TEAM_NAME, HOME_SCORE, AWAY_SCORE
FROM SCHEDULE SC JOIN STADIUM ST
ON SC.STADIUM_ID = ST.STADIUM_ID
    JOIN TEAM HT
ON SC.HOMETEAM_ID = HT.TEAM_ID
    JOIN TEAM AWT
ON SC.AWAYTEAM_ID = AWT.TEAM_ID
WHERE HOME_SCORE >= AWAY_SCORE + 3;

-- WHERE 절의 INNER JOIN으로 구현
SELECT ST.STADIUM_NAME, SC.STADIUM_ID, SCHE_DATE, HT.TEAM_NAME,
    AWT.TEAM_NAME, HOME_SCORE, AWAY_SCORE
FROM SCHEDULE SC, STADIUM ST, TEAM HT, TEAM AWT
WHERE HOME_SCORE >= AWAY_SCORE + 3
    AND SC.STADIUM_ID = ST.STADIUM_ID
    AND SC.HOMETEAM_ID = HT.TEAM_ID
    AND SC.AWAYTEAM_ID = AWT.TEAM_ID;